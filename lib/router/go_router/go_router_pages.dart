/*
 * @Author: mingci gu271901088@gmail.com
 * @Date: 2025-01-27
 * @LastEditors: mingci gu271901088@gmail.com
 * @LastEditTime: 2025-10-30 15:04:44
 * @FilePath: /SPFlutterPro/lib/router/go_router_pages.dart
 * @Description: GoRouter È°µÈù¢ÁªÑ‰ª∂ - Âü∫Á°ÄÈ°µÈù¢ÁªÑ‰ª∂
 */

import 'package:flutter/material.dart';
import 'package:common_flutter_network/common_flutter_network.dart';
import 'package:common_widgets_utils/common_widgets_utils.dart';
import 'package:common_widgets_utils/src/bottom_sheet/bottom_sheet_example.dart';
import 'package:common_widgets_utils/src/center_dialog/center_dialog_example.dart';
import 'go_router_utils.dart';
import '../../module/tabbar/bottom_tab_example.dart';
import '../../tab/tab_example.dart';
import '../../common/device_info_service.dart';
import '../../common/launcher_util.dart';
import '../../common/permission_service.dart';
import '../../common/intl_util.dart';
import '../../common/image_cache_util.dart';
import 'package:permission_handler/permission_handler.dart';

/// È¶ñÈ°µÁªÑ‰ª∂
class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  int _counter = 0;

  @override
  void initState() {
    super.initState();
    LogUtils.i('HomePage initState');
  }

  void _incrementCounter() {
    setState(() {
      _counter++;
    });

    LogUtils.userAction('ÁÇπÂáªËÆ°Êï∞Âô®ÊåâÈíÆ', params: {
      'counterValue': _counter,
      'timestamp': DateTime.now().toIso8601String(),
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: const Text('SP Flutter Shopping'),
        centerTitle: true,
      ),
      body: ListView(
        padding: const EdgeInsets.all(16.0),
        children: [
          // ËÆ°Êï∞Âô®ÊºîÁ§∫Âå∫Âüü
          _buildCounterSection(context),
          const SizedBox(height: 24),

          // UIÁªÑ‰ª∂Á§∫‰æã
          _buildSectionTitle('üé® UIÁªÑ‰ª∂Á§∫‰æã'),
          _buildExampleCard(
            context,
            title: 'È¢úËâ≤Â∑•ÂÖ∑Á§∫‰æã',
            description: 'ÊºîÁ§∫È¢úËâ≤ÁÆ°ÁêÜÂô®ÁöÑ‰ΩøÁî®',
            color: ColorManager.primary,
            icon: Icons.palette,
            onTap: () {
              // Ë∑≥ËΩ¨Âà∞È¢úËâ≤Á§∫‰æãÈ°µÈù¢
              Navigator.push(
                context,
                MaterialPageRoute(
                    builder: (context) => const ColorExamplePage()),
              );
            },
          ),
          _buildExampleCard(
            context,
            title: 'Â∫ïÈÉ®ÂºπÁ™óÁ§∫‰æã',
            description: 'ÊºîÁ§∫ÂêÑÁßçÂ∫ïÈÉ®ÂºπÁ™óÊ†∑Âºè',
            color: Colors.purple,
            icon: Icons.view_agenda,
            onTap: () => Navigator.push(
              context,
              MaterialPageRoute(
                  builder: (context) => const BottomSheetExample()),
            ),
          ),
          _buildExampleCard(
            context,
            title: '‰∏≠Èó¥ÂºπÁ™óÁ§∫‰æã',
            description: 'ÊºîÁ§∫ÂêÑÁßç‰∏≠Èó¥ÂºπÁ™óÊ†∑Âºè',
            color: Colors.teal,
            icon: Icons.flip_to_front,
            onTap: () => Navigator.push(
              context,
              MaterialPageRoute(
                  builder: (context) => const CenterDialogExample()),
            ),
          ),
          const SizedBox(height: 16),

          // Â∏∏Áî®Â∑•ÂÖ∑Á§∫‰æã
          _buildSectionTitle('üß∞ Â∏∏Áî®Â∑•ÂÖ∑Á§∫‰æã'),
          _buildExampleCard(
            context,
            title: 'ËÆæÂ§á‰ø°ÊÅØ',
            description: 'ËØªÂèñËÆæÂ§áÂìÅÁâå/ÂûãÂè∑/Á≥ªÁªüÁâàÊú¨Á≠â',
            color: Colors.brown,
            icon: Icons.devices_other,
            onTap: () async {
              final data = await DeviceInfoService.getDeviceData();
              if (!mounted) return;
              showDialog(
                context: context,
                builder: (_) => AlertDialog(
                  title: const Text('ËÆæÂ§á‰ø°ÊÅØ'),
                  content: SingleChildScrollView(child: Text(data.toString())),
                ),
              );
            },
          ),
          _buildExampleCard(
            context,
            title: 'ÊâìÂºÄÂÆòÊñπÁΩëÁ´ô',
            description: 'ÈÄöËøá url_launcher ÊâìÂºÄÂ§ñÈÉ®ÈìæÊé•',
            color: Colors.blueGrey,
            icon: Icons.open_in_browser,
            onTap: () async {
              final ok = await LauncherUtil.openUrl('https://flutter.dev');
              if (!ok && mounted) {
                ScaffoldMessenger.of(context).showSnackBar(
                  const SnackBar(content: Text('Êó†Ê≥ïÊâìÂºÄÈìæÊé•')),
                );
              }
            },
          ),
          _buildExampleCard(
            context,
            title: 'Áî≥ËØ∑Áõ∏Êú∫ÊùÉÈôê',
            description: 'permission_handler Á§∫‰æã',
            color: Colors.orange,
            icon: Icons.photo_camera,
            onTap: () async {
              final granted = await PermissionService.ensure(Permission.camera);
              if (!mounted) return;
              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(content: Text(granted ? 'Â∑≤ÊéàÊùÉ' : 'Êú™ÊéàÊùÉ')),
              );
            },
          ),
          _buildExampleCard(
            context,
            title: 'Ê†ºÂºèÂåñÁ§∫‰æã',
            description: 'IntlÔºöÊó∂Èó¥/Ë¥ßÂ∏Å/Áõ∏ÂØπÊó∂Èó¥',
            color: Colors.green,
            icon: Icons.access_time,
            onTap: () async {
              final ts = IntlUtil.formatDate(DateTime.now());
              final money = IntlUtil.formatCurrency(88.8);
              final rel = IntlUtil.relativeTime(
                  DateTime.now().subtract(const Duration(minutes: 3)));
              if (!mounted) return;
              showDialog(
                context: context,
                builder: (_) => AlertDialog(
                  title: const Text('Ê†ºÂºèÂåñÁ§∫‰æã'),
                  content: Text('Êó∂Èó¥: $ts\nÈáëÈ¢ù: $money\nÁõ∏ÂØπ: $rel'),
                ),
              );
            },
          ),
          _buildExampleCard(
            context,
            title: 'ÂõæÁâáÁºìÂ≠òÂ±ïÁ§∫',
            description: 'cached_network_image ÁÆÄÊòìÂ∞ÅË£Ö',
            color: Colors.purpleAccent,
            icon: Icons.image,
            onTap: () async {
              if (!mounted) return;
              showDialog(
                context: context,
                builder: (_) => AlertDialog(
                  title: const Text('ÂõæÁâáÁºìÂ≠ò'),
                  content: SizedBox(
                    width: 200,
                    height: 200,
                    child: ImageCacheUtil.network(
                      'https://picsum.photos/300',
                      fit: BoxFit.cover,
                      borderRadius: BorderRadius.circular(8),
                    ),
                  ),
                ),
              );
            },
          ),

          // TabÂØºËà™Á§∫‰æãÔºàÊñ∞ÁâàÂ∞ÅË£ÖÔºâ
          _buildSectionTitle('üì± TabÂØºËà™Á§∫‰æãÔºàÊñ∞ÁâàÂ∞ÅË£ÖÔºâ'),
          _buildExampleCard(
            context,
            title: 'Âü∫Á°ÄTabÁ§∫‰æã',
            description: 'ÁÆÄÂçïÁöÑ‰∏âTabÂØºËà™',
            color: Colors.cyan,
            icon: Icons.tab,
            onTap: () => Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => const BasicTabExample()),
            ),
          ),
          _buildExampleCard(
            context,
            title: 'È´òÁ∫ßTabÁ§∫‰æã',
            description: 'Â∏¶ÂæΩÁ´†ÂíåËá™ÂÆö‰πâÊ†∑ÂºèÁöÑTab',
            color: Colors.amber,
            icon: Icons.tab_unselected,
            onTap: () => Navigator.push(
              context,
              MaterialPageRoute(
                  builder: (context) => const AdvancedTabExample()),
            ),
          ),
          _buildExampleCard(
            context,
            title: 'Ëá™ÂÆö‰πâÊéßÂà∂Âô®TabÁ§∫‰æã',
            description: 'ÊºîÁ§∫ÁºñÁ®ãÂºèTabÂàáÊç¢',
            color: Colors.pink,
            icon: Icons.app_settings_alt,
            onTap: () => Navigator.push(
              context,
              MaterialPageRoute(
                  builder: (context) => const CustomControllerTabExample()),
            ),
          ),
          const SizedBox(height: 16),

          // TabÂØºËà™Á§∫‰æãÔºàÊóßÁâàÔºâ
          _buildSectionTitle('üìë TabÂØºËà™Á§∫‰æãÔºàÊóßÁâàÔºâ'),
          _buildExampleCard(
            context,
            title: 'Â∫ïÈÉ®TabÁ§∫‰æã',
            description: '‰ΩøÁî®common_widgets_utilsÁöÑTab',
            color: Colors.deepPurple,
            icon: Icons.dashboard,
            onTap: () => Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => const BottomTabExample()),
            ),
          ),
          _buildExampleCard(
            context,
            title: 'È´òÁ∫ßÂ∫ïÈÉ®TabÁ§∫‰æã',
            description: 'È´òÁ∫ßËá™ÂÆö‰πâÂ∫ïÈÉ®Tab',
            color: Colors.indigo,
            icon: Icons.dashboard_customize,
            onTap: () => Navigator.push(
              context,
              MaterialPageRoute(
                  builder: (context) => const AdvancedBottomTabExample()),
            ),
          ),
          const SizedBox(height: 16),

          // Áä∂ÊÄÅÁÆ°ÁêÜÁ§∫‰æã
          _buildSectionTitle('‚ö° Áä∂ÊÄÅÁÆ°ÁêÜÁ§∫‰æã'),
          _buildExampleCard(
            context,
            title: 'GetX ÂÆåÁæéÁ§∫‰æã',
            description: 'ÊºîÁ§∫GetXÁä∂ÊÄÅÁÆ°ÁêÜ',
            color: Colors.red,
            icon: Icons.g_mobiledata,
            onTap: () => context.goGetXExample(),
          ),
          _buildExampleCard(
            context,
            title: 'Riverpod ÂÆåÁæéÁ§∫‰æã',
            description: 'ÊºîÁ§∫RiverpodÁä∂ÊÄÅÁÆ°ÁêÜ',
            color: Colors.teal,
            icon: Icons.anchor,
            onTap: () => context.goRiverpodExample(),
          ),
          const SizedBox(height: 24),
        ],
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Â¢ûÂä†ËÆ°Êï∞',
        child: const Icon(Icons.add),
      ),
    );
  }

  /// ÊûÑÂª∫ËÆ°Êï∞Âô®Âå∫Âüü
  Widget _buildCounterSection(BuildContext context) {
    return Card(
      elevation: 4,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      child: Padding(
        padding: const EdgeInsets.all(24.0),
        child: Column(
          children: [
            const Icon(
              Icons.touch_app,
              size: 48,
              color: Colors.deepPurple,
            ),
            const SizedBox(height: 16),
            const Text(
              '‰Ω†Â∑≤ÁªèÁÇπÂáª‰∫ÜËøô‰πàÂ§öÊ¨°Ôºö',
              style: TextStyle(fontSize: 16),
            ),
            const SizedBox(height: 8),
            Text(
              '$_counter',
              style: Theme.of(context).textTheme.headlineLarge?.copyWith(
                    color: Colors.deepPurple,
                    fontWeight: FontWeight.bold,
                  ),
            ),
            const SizedBox(height: 16),
            const DashedLine(),
          ],
        ),
      ),
    );
  }

  /// ÊûÑÂª∫ÂàÜÁ±ªÊ†áÈ¢ò
  Widget _buildSectionTitle(String title) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: Row(
        children: [
          Container(
            width: 4,
            height: 24,
            decoration: BoxDecoration(
              color: Colors.deepPurple,
              borderRadius: BorderRadius.circular(2),
            ),
          ),
          const SizedBox(width: 12),
          Text(
            title,
            style: const TextStyle(
              fontSize: 20,
              fontWeight: FontWeight.bold,
              color: Colors.black87,
            ),
          ),
        ],
      ),
    );
  }

  /// ÊûÑÂª∫Á§∫‰æãÂç°Áâá
  Widget _buildExampleCard(
    BuildContext context, {
    required String title,
    required String description,
    required Color color,
    required IconData icon,
    required VoidCallback onTap,
  }) {
    return Card(
      elevation: 2,
      margin: const EdgeInsets.only(bottom: 12),
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      child: InkWell(
        onTap: onTap,
        borderRadius: BorderRadius.circular(12),
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Row(
            children: [
              Container(
                width: 56,
                height: 56,
                decoration: BoxDecoration(
                  color: color.withValues(alpha: 0.1),
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Icon(
                  icon,
                  color: color,
                  size: 28,
                ),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      title,
                      style: const TextStyle(
                        fontSize: 16,
                        fontWeight: FontWeight.bold,
                        color: Colors.black87,
                      ),
                    ),
                    const SizedBox(height: 4),
                    Text(
                      description,
                      style: TextStyle(
                        fontSize: 13,
                        color: Colors.grey.shade600,
                      ),
                    ),
                  ],
                ),
              ),
              Icon(
                Icons.arrow_forward_ios,
                color: Colors.grey.shade400,
                size: 16,
              ),
            ],
          ),
        ),
      ),
    );
  }
}

/// ÁôªÂΩïÈ°µÁªÑ‰ª∂
class LoginPage extends StatelessWidget {
  const LoginPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('ÁôªÂΩï'),
        backgroundColor: Colors.deepPurple,
        foregroundColor: Colors.white,
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              const Icon(
                Icons.login,
                size: 80,
                color: Colors.deepPurple,
              ),
              const SizedBox(height: 20),
              const Text(
                'Áî®Êà∑ÁôªÂΩï',
                style: TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                ),
              ),
              const SizedBox(height: 40),
              ElevatedButton(
                onPressed: () {
                  // Ê®°ÊãüÁôªÂΩïÊàêÂäü
                  context.goMainTab();
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.deepPurple,
                  foregroundColor: Colors.white,
                  padding:
                      const EdgeInsets.symmetric(horizontal: 32, vertical: 16),
                ),
                child: const Text('ÁôªÂΩï'),
              ),
              const SizedBox(height: 16),
              TextButton(
                onPressed: () => context.goHome(),
                child: const Text('ËøîÂõûÈ¶ñÈ°µ'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

/// ‰∏ªTabÈ°µÁªÑ‰ª∂
class MainTabPage extends StatelessWidget {
  const MainTabPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: const Center(
        child: Text('‰∏ªTabÈ°µÈù¢'),
      ),
      bottomNavigationBar: BottomNavigationBar(
        type: BottomNavigationBarType.fixed,
        items: const [
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'È¶ñÈ°µ',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.category),
            label: 'ÂàÜÁ±ª',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.shopping_cart),
            label: 'Ë¥≠Áâ©ËΩ¶',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.message),
            label: 'Ê∂àÊÅØ',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.person),
            label: 'ÊàëÁöÑ',
          ),
        ],
        onTap: (index) {
          switch (index) {
            case 0:
              context.goTab('home');
              break;
            case 1:
              context.goTab('category');
              break;
            case 2:
              context.goTab('cart');
              break;
            case 3:
              context.goTab('message');
              break;
            case 4:
              context.goTab('profile');
              break;
          }
        },
      ),
    );
  }
}

/// TabÈ¶ñÈ°µÁªÑ‰ª∂
class TabHomePage extends StatelessWidget {
  const TabHomePage({super.key});

  @override
  Widget build(BuildContext context) {
    return const Scaffold(
      body: Center(
        child: Text('TabÈ¶ñÈ°µ'),
      ),
    );
  }
}

/// TabÂàÜÁ±ªÈ°µÁªÑ‰ª∂
class TabCategoryPage extends StatelessWidget {
  const TabCategoryPage({super.key});

  @override
  Widget build(BuildContext context) {
    return const Scaffold(
      body: Center(
        child: Text('TabÂàÜÁ±ªÈ°µ'),
      ),
    );
  }
}

/// TabË¥≠Áâ©ËΩ¶È°µÁªÑ‰ª∂
class TabCartPage extends StatelessWidget {
  const TabCartPage({super.key});

  @override
  Widget build(BuildContext context) {
    return const Scaffold(
      body: Center(
        child: Text('TabË¥≠Áâ©ËΩ¶È°µ'),
      ),
    );
  }
}

/// TabÊ∂àÊÅØÈ°µÁªÑ‰ª∂
class TabMessagePage extends StatelessWidget {
  const TabMessagePage({super.key});

  @override
  Widget build(BuildContext context) {
    return const Scaffold(
      body: Center(
        child: Text('TabÊ∂àÊÅØÈ°µ'),
      ),
    );
  }
}

/// Tab‰∏™‰∫∫È°µÁªÑ‰ª∂
class TabProfilePage extends StatelessWidget {
  const TabProfilePage({super.key});

  @override
  Widget build(BuildContext context) {
    return const Scaffold(
      body: Center(
        child: Text('Tab‰∏™‰∫∫È°µ'),
      ),
    );
  }
}

/// ÊêúÁ¥¢È°µÁªÑ‰ª∂
class SearchPage extends StatelessWidget {
  const SearchPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('ÊêúÁ¥¢'),
        backgroundColor: Colors.deepPurple,
        foregroundColor: Colors.white,
      ),
      body: const Center(
        child: Text('ÊêúÁ¥¢È°µÈù¢'),
      ),
    );
  }
}

/// ËÆæÁΩÆÈ°µÁªÑ‰ª∂
class SettingsPage extends StatelessWidget {
  const SettingsPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('ËÆæÁΩÆ'),
        backgroundColor: Colors.deepPurple,
        foregroundColor: Colors.white,
      ),
      body: const Center(
        child: Text('ËÆæÁΩÆÈ°µÈù¢'),
      ),
    );
  }
}

/// ÂÖ≥‰∫éÈ°µÁªÑ‰ª∂
class AboutPage extends StatelessWidget {
  const AboutPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('ÂÖ≥‰∫é'),
        backgroundColor: Colors.deepPurple,
        foregroundColor: Colors.white,
      ),
      body: const Center(
        child: Text('ÂÖ≥‰∫éÈ°µÈù¢'),
      ),
    );
  }
}

/// È¢úËâ≤Á§∫‰æãÈ°µÁªÑ‰ª∂
class ColorExamplePage extends StatelessWidget {
  const ColorExamplePage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('È¢úËâ≤Á§∫‰æã'),
        backgroundColor: Colors.deepPurple,
        foregroundColor: Colors.white,
      ),
      body: const Center(
        child: Text('È¢úËâ≤Á§∫‰æãÈ°µÈù¢'),
      ),
    );
  }
}

/// Â∫ïÈÉ®ÂºπÁ™óÁ§∫‰æãÈ°µÁªÑ‰ª∂
class BottomSheetExamplePage extends StatelessWidget {
  const BottomSheetExamplePage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Â∫ïÈÉ®ÂºπÁ™óÁ§∫‰æã'),
        backgroundColor: Colors.deepPurple,
        foregroundColor: Colors.white,
      ),
      body: const Center(
        child: Text('Â∫ïÈÉ®ÂºπÁ™óÁ§∫‰æãÈ°µÈù¢'),
      ),
    );
  }
}

/// Â±Ö‰∏≠ÂØπËØùÊ°ÜÁ§∫‰æãÈ°µÁªÑ‰ª∂
class CenterDialogExamplePage extends StatelessWidget {
  const CenterDialogExamplePage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Â±Ö‰∏≠ÂØπËØùÊ°ÜÁ§∫‰æã'),
        backgroundColor: Colors.deepPurple,
        foregroundColor: Colors.white,
      ),
      body: const Center(
        child: Text('Â±Ö‰∏≠ÂØπËØùÊ°ÜÁ§∫‰æãÈ°µÈù¢'),
      ),
    );
  }
}
